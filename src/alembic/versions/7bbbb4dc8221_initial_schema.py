"""Initial schema

Revision ID: 7bbbb4dc8221
Revises: 
Create Date: 2022-03-24 11:42:22.131021

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7bbbb4dc8221'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('architecture',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sequence', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_architecture_sequence'), 'architecture', ['sequence'], unique=False)
    op.create_table('body',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('radius', sa.Float(), nullable=True),
    sa.Column('mu', sa.Float(), nullable=True),
    sa.Column('period', sa.Float(), nullable=True),
    sa.Column('pole_vec_x', sa.Float(), nullable=True),
    sa.Column('pole_vec_y', sa.Float(), nullable=True),
    sa.Column('pole_vec_z', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_body_name'), 'body', ['name'], unique=False)
    op.create_table('trajectory',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('body_id', sa.Integer(), nullable=True),
    sa.Column('architecture_id', sa.Integer(), nullable=True),
    sa.Column('t_launch', sa.Float(), nullable=True),
    sa.Column('t_arr', sa.Float(), nullable=True),
    sa.Column('v_inf_arr_x', sa.Float(), nullable=True),
    sa.Column('v_inf_arr_y', sa.Float(), nullable=True),
    sa.Column('v_inf_arr_z', sa.Float(), nullable=True),
    sa.Column('pos_sun_x', sa.Float(), nullable=True),
    sa.Column('pos_sun_y', sa.Float(), nullable=True),
    sa.Column('pos_sun_z', sa.Float(), nullable=True),
    sa.Column('pos_earth_x', sa.Float(), nullable=True),
    sa.Column('pos_earth_y', sa.Float(), nullable=True),
    sa.Column('pos_earth_z', sa.Float(), nullable=True),
    sa.Column('pos_target_x', sa.Float(), nullable=True),
    sa.Column('pos_target_y', sa.Float(), nullable=True),
    sa.Column('pos_target_z', sa.Float(), nullable=True),
    sa.Column('pos_sc_x', sa.Float(), nullable=True),
    sa.Column('pos_sc_y', sa.Float(), nullable=True),
    sa.Column('pos_sc_z', sa.Float(), nullable=True),
    sa.Column('c3', sa.Float(), nullable=True),
    sa.Column('dv_total', sa.Float(), nullable=True),
    sa.Column('arrival_mass', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['architecture_id'], ['architecture.id'], ),
    sa.ForeignKeyConstraint(['body_id'], ['body.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trajectory_arrival_mass'), 'trajectory', ['arrival_mass'], unique=False)
    op.create_index(op.f('ix_trajectory_c3'), 'trajectory', ['c3'], unique=False)
    op.create_index(op.f('ix_trajectory_dv_total'), 'trajectory', ['dv_total'], unique=False)
    op.create_index(op.f('ix_trajectory_t_arr'), 'trajectory', ['t_arr'], unique=False)
    op.create_index(op.f('ix_trajectory_t_launch'), 'trajectory', ['t_launch'], unique=False)
    op.create_index(op.f('ix_trajectory_v_inf_arr_x'), 'trajectory', ['v_inf_arr_x'], unique=False)
    op.create_index(op.f('ix_trajectory_v_inf_arr_y'), 'trajectory', ['v_inf_arr_y'], unique=False)
    op.create_index(op.f('ix_trajectory_v_inf_arr_z'), 'trajectory', ['v_inf_arr_z'], unique=False)
    op.create_table('entry',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('body_id', sa.Integer(), nullable=True),
    sa.Column('trajectory_id', sa.Integer(), nullable=True),
    sa.Column('bvec_theta', sa.Float(), nullable=False),
    sa.Column('bvec_mag', sa.Integer(), nullable=False),
    sa.Column('safe', sa.Boolean(), nullable=True),
    sa.Column('t_entry', sa.Float(), nullable=True),
    sa.Column('pos_entry_x', sa.Float(), nullable=True),
    sa.Column('pos_entry_y', sa.Float(), nullable=True),
    sa.Column('pos_entry_z', sa.Float(), nullable=True),
    sa.Column('vel_entry_x', sa.Float(), nullable=True),
    sa.Column('vel_entry_y', sa.Float(), nullable=True),
    sa.Column('vel_entry_z', sa.Float(), nullable=True),
    sa.Column('pos_sun_entry_x', sa.Float(), nullable=True),
    sa.Column('pos_sun_entry_y', sa.Float(), nullable=True),
    sa.Column('pos_sun_entry_z', sa.Float(), nullable=True),
    sa.Column('pos_sc_entry_x', sa.Float(), nullable=True),
    sa.Column('pos_sc_entry_y', sa.Float(), nullable=True),
    sa.Column('pos_sc_entry_z', sa.Float(), nullable=True),
    sa.Column('pos_target_entry_x', sa.Float(), nullable=True),
    sa.Column('pos_target_entry_y', sa.Float(), nullable=True),
    sa.Column('pos_target_entry_z', sa.Float(), nullable=True),
    sa.Column('maneuver', sa.String(), nullable=True),
    sa.Column('dv_maneuver', sa.Float(), nullable=True),
    sa.Column('pos_man_x', sa.Float(), nullable=True),
    sa.Column('pos_man_y', sa.Float(), nullable=True),
    sa.Column('pos_man_z', sa.Float(), nullable=True),
    sa.Column('vel_man_x', sa.Float(), nullable=True),
    sa.Column('vel_man_y', sa.Float(), nullable=True),
    sa.Column('vel_man_z', sa.Float(), nullable=True),
    sa.Column('relay_volume', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['body_id'], ['body.id'], ),
    sa.ForeignKeyConstraint(['trajectory_id'], ['trajectory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entry_bvec_mag'), 'entry', ['bvec_mag'], unique=False)
    op.create_index(op.f('ix_entry_bvec_theta'), 'entry', ['bvec_theta'], unique=False)
    op.create_index(op.f('ix_entry_dv_maneuver'), 'entry', ['dv_maneuver'], unique=False)
    op.create_index(op.f('ix_entry_pos_entry_x'), 'entry', ['pos_entry_x'], unique=False)
    op.create_index(op.f('ix_entry_pos_entry_y'), 'entry', ['pos_entry_y'], unique=False)
    op.create_index(op.f('ix_entry_pos_entry_z'), 'entry', ['pos_entry_z'], unique=False)
    op.create_index(op.f('ix_entry_relay_volume'), 'entry', ['relay_volume'], unique=False)
    op.create_index(op.f('ix_entry_t_entry'), 'entry', ['t_entry'], unique=False)
    op.create_index(op.f('ix_entry_vel_entry_x'), 'entry', ['vel_entry_x'], unique=False)
    op.create_index(op.f('ix_entry_vel_entry_y'), 'entry', ['vel_entry_y'], unique=False)
    op.create_index(op.f('ix_entry_vel_entry_z'), 'entry', ['vel_entry_z'], unique=False)
    op.create_table('flyby',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('trajectory_id', sa.Integer(), nullable=True),
    sa.Column('body_id', sa.Integer(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('days', sa.Float(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('v_inf_in_x', sa.Float(), nullable=True),
    sa.Column('v_inf_in_y', sa.Float(), nullable=True),
    sa.Column('v_inf_in_z', sa.Float(), nullable=True),
    sa.Column('v_inf_out_x', sa.Float(), nullable=True),
    sa.Column('v_inf_out_y', sa.Float(), nullable=True),
    sa.Column('v_inf_out_z', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['body_id'], ['body.id'], ),
    sa.ForeignKeyConstraint(['trajectory_id'], ['trajectory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flyby_body_id'), 'flyby', ['body_id'], unique=False)
    op.create_table('occultation',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=True),
    sa.Column('t_occ_n', sa.Float(), nullable=True),
    sa.Column('t_occ_out', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['entry_id'], ['entry.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('occultation')
    op.drop_index(op.f('ix_flyby_body_id'), table_name='flyby')
    op.drop_table('flyby')
    op.drop_index(op.f('ix_entry_vel_entry_z'), table_name='entry')
    op.drop_index(op.f('ix_entry_vel_entry_y'), table_name='entry')
    op.drop_index(op.f('ix_entry_vel_entry_x'), table_name='entry')
    op.drop_index(op.f('ix_entry_t_entry'), table_name='entry')
    op.drop_index(op.f('ix_entry_relay_volume'), table_name='entry')
    op.drop_index(op.f('ix_entry_pos_entry_z'), table_name='entry')
    op.drop_index(op.f('ix_entry_pos_entry_y'), table_name='entry')
    op.drop_index(op.f('ix_entry_pos_entry_x'), table_name='entry')
    op.drop_index(op.f('ix_entry_dv_maneuver'), table_name='entry')
    op.drop_index(op.f('ix_entry_bvec_theta'), table_name='entry')
    op.drop_index(op.f('ix_entry_bvec_mag'), table_name='entry')
    op.drop_table('entry')
    op.drop_index(op.f('ix_trajectory_v_inf_arr_z'), table_name='trajectory')
    op.drop_index(op.f('ix_trajectory_v_inf_arr_y'), table_name='trajectory')
    op.drop_index(op.f('ix_trajectory_v_inf_arr_x'), table_name='trajectory')
    op.drop_index(op.f('ix_trajectory_t_launch'), table_name='trajectory')
    op.drop_index(op.f('ix_trajectory_t_arr'), table_name='trajectory')
    op.drop_index(op.f('ix_trajectory_dv_total'), table_name='trajectory')
    op.drop_index(op.f('ix_trajectory_c3'), table_name='trajectory')
    op.drop_index(op.f('ix_trajectory_arrival_mass'), table_name='trajectory')
    op.drop_table('trajectory')
    op.drop_index(op.f('ix_body_name'), table_name='body')
    op.drop_table('body')
    op.drop_index(op.f('ix_architecture_sequence'), table_name='architecture')
    op.drop_table('architecture')
    # ### end Alembic commands ###
